## 定义单件模式
确保程序中一个类只有一个实例，并提供一个全局访问点。

在Java 1.4以及更早的版本中，volatile关键字的实现会导致双重检查加锁的失效，

在Java中全局变量就是对对象的静态引用。在这样的情况下使用全局变量会有一些缺点，即如何实现延时加载。

Java中实现单间模式需要实现私有的构造器、一个静态方法和一个静态变量。

如果不是采用第五版的Java 2,双重校验锁实现会失效。

如果使用多个类加载器，可能导致单件失效而产生多个示例。

如果使用JVM1.2之前的版本，必须建立单间注册表，以免垃圾收集器将单件回收。

